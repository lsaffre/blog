==================================
20140103 (Friday, 03 January 2014)
==================================

Merged ``lino.apps`` to :mod:`lino.modlib`
------------------------------------------

I did it: I stepped back and merged ``lino.apps`` back to
:mod:`lino.modlib`.  The following apps were moved:

- :mod:`lino.modlib.beid`
- :mod:`lino.modlib.cal`
- :mod:`lino.modlib.eid_jslib`
- :mod:`lino.modlib.extensible`
- :mod:`lino.modlib.extjs`
- :mod:`lino.modlib.importfilters`
- :mod:`lino.modlib.plain`
    
Yes, the name `modlib` is not optimal because normal people don't
guess what it means. But I felt very bad with the half-way situation,
and ``lino.apps`` clashed with ``django.apps`` which now means
something completely different.

Thanks to Joe for helping me to take this decision. 
Here is our chat:
    
| [13:22:55] Luc: Another question: do you agree that I should move the existing lino.apps modules back to lino.modlib?
| [13:23:18] Luc: I don't like the current state where some modlib apps are under lino.apps and some other under lino.modlib
| [13:24:14] Joe: the word "modlib" is not much intuitive. I took me quite a while to discover that quite a lot of Lino functionality is hidden in that folder. lino.apps seems more appropriate to me.
| [13:25:48] Joe: But it can be confusing if something is in one folder, something in another ....
| [13:26:37] Luc: What about lino.applib then?
| [13:27:54] Luc: Or I thought about "lino.appsys" because it is a *system* of apps, not just a *collection*.
| [13:28:04] Joe: To me modlib seems better than applib, but may be it is because I'm already accustomed to modlib. So I don't have any strng opinion, sorry
| [13:28:27] Luc: Okay i leave you in peace then :-)
| [13:30:05] Luc: I'll probably go back to "modlib" then. Because that's the least work for the moment. When some day we find *the* name, then we think again about it.
| [13:30:21] Joe: agree


API docs still pointed to google code repository
------------------------------------------------
    
I noticed that the API docs still pointed to the google code
repository because `srcref_url` was not set correctly. Fixed.

Merged `lino.examples` to `lino.projects`
-----------------------------------------

Once you start to tidy up, you cannot easily stop: When the first
merge had taken relatively little time I got eager and also moved the
modules below ``lino.examples`` back to :mod:`lino.projects`.  My
original idea had been the opposite, but also here I turned back
because I discovered that writing ``from lino.examples.std import *``
for every Lino :xfile:`settings.py` file would sound strange.

- :mod:`lino.projects.start`
- :mod:`lino.projects.docs`


