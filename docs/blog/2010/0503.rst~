= [20100501 ←] [20100503 03.05.2010] [20100504 →] =

Hier noch mal meine Liste von 12 offenen Detail (sh. [20100430] und [20100501]):

DONE:

 # Detail-Fenster hat keinen Submit-Button. 
 # Detail-Fenster auf Personen funktioniert nicht; wahrscheinlich weil dort Detail-Grids sind. (Server sagt `AttributeError: 'GridElement' object has no attribute 'rh'`)
 # NotesByPerson öffnet sich nicht, weil ein JS-Fehler `w is null` kommt. Vielleicht einfach nur `py2js()` anpassen, dass sie `None` nicht als `null` rendert sondern als `undefined`.
 # QuickFilter funktioniert nicht mehr (er vergisst das `refresh()`).
 # Insert-Fenster hat keinen Titel und keinen Cancel-Button.
 # Nach Submit im Insert-Fenster muss das Fenster geschlossen werden und die darunterliegende Grid aktualisiert werden.

FÜR SPÄTER:

 # Außerdem sollte das Detail-Fenster par défaut nicht editieren lassen. Also normalerweise alle Felder mit `editable:false` und unten ein Button "Edit", und wenn man darauf klickt werden alle Felder editierbar (und der Record in der Datenbank blockiert), und unten stehen zwei Buttons "Save" und "Cancel". Wobei darauf zu achten ist was passiert, wenn man während des Bearbeitens in der Grid auf eine andere Zeile klickt. Dann muss er am besten das Detail-Fenster speichern, und falls dort ungültige Daten stehen, in der Grid den Zeilenwechsel verweigern.
 # Hinter das QuickFilter-Feld muss ein Button, um den Filter zu aktivieren. Dass man einfach nur ENTER drücken muss ist nicht intuitiv.

TODO: 

 # Ein weniger abschreckendes Template für das PDF-Dokument machen.
 # Reports, für deren Model keine Properties existieren, sollten auch keinen Properties-Button haben.
 # Insert funktioniert nicht in SlaveGrid-Fenstern
 # Editor für `remarks` ist nur im Detail-Fenster sichtbar, aber nicht im Insert-Fenter.


Für diesen letzten Punkt habe ich gerade mal wieder stundenlang gefrickelt, um einen Showcase zu erstellen:

[20100503_vbox_stretch]
