======================
Tuesday, July 21, 2015
======================

Service Report for Lino Noi
===========================

I converted the Service Report (:mod:`lino.modlib.clocking`) from a
simple Report to a database model because I want to keep a history of
the emitted service reports and because one day I'll probably want to
automatically send them to their recipient.

Side effects: 

- Discovered and fixed a bug: if a table had some numeric totals who
  caused a line of sums to be rendered, then the id column was also
  rendered with a sum (whose value was always "0", but which was
  rendered).

- I didn't want ForeignKey fields in the pdf document to be clickable
  links.

- Lino has now a `Site.kernel.html_renderer` which renders "simple"
  html instead of "bootstrap-style" html or "extjs-style" html.  The
  most visible difference is that 

TODO: 

- write documentation about stories, e.g. explain difference between::

    {{ar.story2html(obj.get_story(ar))}}

  and::

    {{ar.show(rt.modules.clocking.ReportedTickets, obj, header_level=2)}}
    {{ar.show(rt.modules.clocking.ReportedProjects, obj, header_level=2)}}

- (cancelled) Make :class:`lino.modlib.clocking.models.ServiceReport`
  inherit from `ContactRelated` and select the tickets based on the
  report's recipient instead of manually filling a user into the
  `interesting_for` field.


Who is interested in tickets?
=============================

I had another enlightment... Lino Noi needs another database model
:class:`lino.modlib.tickets.models.Site`. And "interests" are not
registered per user but per site.

Side effects:

- I moved code from :mod:`lino_welfare.modlib.welfare.fixtures.demo2`
  to a new fixture :mod:`lino.modlib.excerpts.fixtures.demo2` so that
  this fixture is now also available for :ref:`noi`.

- I inverted the order of permission check in
  :meth:`get_bound_action_permission
  <lino.core.boundaction.BoundAction.get_bound_action_permission>`. This
  was possibly the cause for sporadic error messages like
  :message:`Cannot assign "<lino.modlib.users.utils.AnonymousUser
  object at 0x7f562512f210>": "Upload.user" must be a "User"
  instance` when called by anonymous.

- Updated documentation about Lino Noi (under :ref:`noi.specs`).
