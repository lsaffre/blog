20110826
========

Before releasing 1.2.2 I wanted to get a design problem of Lino's 
translation system fixed:

#.  Die `dummy_messages.py` steht ja momentan im :attr:`lino.Lino.source_dir` 
    der jeweiligen Lino-Anwendung. Aber das ist falsch, denn deshalb m端ssen die 
    Texte aus der :xfile:`linolib.js` f端r jede Anwendung neu 端bersetzt werden.
    Idealerweise m端sste ich es wie der Django-Befehl `makemessages` machen, 
    also pro .dtl-Datei eine .dtl.py-Datei erzeugen, und ebenfalls 
    eine :file:`linolib.js.py`.

So now Lino no longer generates a file `dummy_messages.py` per application, 
but instead:

- Each `.dtl` file gets a companion `.dtl.py` generated in 
  the same directory. 
  Note that these files would not be imported by a Python process because there 
  is no :file:`__init__.py` in their directory, but the 
  :term:`makemessages` command doesn't check this and gets fooled: 
  it parses them anyway (and that's what we want).
  
- The :xfile:`linolib.js` has a similar companion :file:`linolib.js.py`.


These files are generated by the :term:`makedocs` command, 
and no longer each time when the Lino server starts up.
The :term:`makedocs` command itself is called from 
:srcref:`/Makefile`.

Modified also :srcref:`/.hgignore` to not care about them. 

Checkin 20110826.
  
.. todo::

  More disturbing is the generation of the local `lino.js` 
  file at each startup. 
  This takes about 10 seconds, and when I'm debugging some 
  code part that has no influence on the `lino.js`, 
  then it's not needed and thus rather annoying.
  
  That's the most important reason to make the :term:`makeui` 
  command also for `lino.ui.extjs3`
  
  
