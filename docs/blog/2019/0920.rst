:date: 2019-09-20

==========================
Friday, September 20, 2019
==========================

Amici removes participants of my meeting
========================================

I continued working on :ticket:`3210` (Amici removes participants of my
meeting).

To reproduce the problem:

- :manage:`runserver` in :mod:`lino_amici.projects.herman` and sign in as robin.
- create calendar entry, leave it in draft mode
- enter a guest. Lino accepts it.
- Hit the Save button of the calendar entry. Poof the participant is gone!

This is because in other circumstances we want this behaviour: Lino should
automatically keep the list of participants synchronized with the "suggested
guests" for this meeting.  For example in :ref:`avanti` when we have a course
with participants (enrolments), and we have generated a series of calendar
entries having their suggested guests filled already, and now one participant
cancels their enrolment.  We want Lino to update all participants of meetings
that are still in draft state.  The issue is that Lino doesn't correctly
differentiate between those two situations:

- manually enter and manage the list of guests

- fill guests automatically and keep it synchronized with the guests suggested
  by the entry generator.

Lino should no longer let me manually create a guest when the event is in "fill
guests" mode.

.. currentmodule:: lino_xl.lib.cal

The :attr:`Event.update_guests` action is always called in the
:meth:`Event.after_ui_save` method.  That's okay, but in our case the action
obviously comes to the conclusion that we do want to update our guests. More
precisely the event state obviously has :attr:`EntryState.edit_guests` set to
False, and the entry type has :attr:`fill_presences` set to True.  The solution
is to simply set

Summary of changes:

- New method :meth:`Event.can_edit_guests_manually` which encapsulates this
  condition. That method is now also used to decide whether presences of a
  calendar entry can be manually created or deleted.

- Changed "Edit participants" to "Fill guests" (in :class:`EntryStates`)

- Renamed :attr:`EntryState.edit_guests` to :attr:`EntryState.fill_guests`

- Changed the :attr:`EntryState.fill_guests` for :attr:`EntryStates.took_place`
  from True to False. Not sure whether this is good. To be observed.  Maybe this
  is application specific.

- Changed the default value for :attr:`EventType.fill_presences` from True to
  False.

- The :fixture:`demo2` fixture for :mod:`lino_xl.lib.cal` no longer relies on
  is_appointment and fill_presences to select the "Absences" entry type.

Note the difference between "guest" and "presence". The model name is currently
still :class:`cal.Guest`, but this should be renamed to :class:`cal.Presence`.
Because the "guest" is actually the field of a presence which points to the
person who is the guest.

Note that the transparence is meant for the responsible user (e.g. in Tera and
Avanti). In Presto it should check for availability of the guests (who are
actually workers), but this is currently not a requirement.

Note that "appointment" means that other people (external partners or
colleagues) are involved and should be informed about schedule changes.

TODO: review the specs, use glossary terms, ...
