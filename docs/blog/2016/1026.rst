:date: 2016-10-26

=====================================
20161026 (Wednesday, 26 October 2016)
=====================================

Importing legacy data from TIM
==============================

I started to import legacy data on a new production site using
:mod:`tim2lino <lino_cosi.lib.tim2lino>`.  Note that :mod:`tim2lino
<lino_cosi.lib.tim2lino>` is rather hackerish, and I don't think that
anybody besides me will ever use it because it is for importing data
from TIM into Lino.

New plugin attribute
:attr:`lino_cosi.lib.tim2lino.Plugin.use_dbfread`.


The first female Lino team member
=================================

Tonight I had a Skype session with :ref:`leena`, who might become the
first woman in the world who understands Lino.  For the moment she is
just starting and has no Django experience, but she knows Python, is
motivated, and her first attempts were promising.  Welcome to our
team, Leena!


Review of the Developer's Guide
===============================

After my meeting with Leena I had (as usual after talking to a newbie)
lots of ideas about what needs to be reviewed in the Developer's
Guide. Some of them made it onto the website.

The topic of demo projects isn't yet well documented because until
today I had a fundamental problem: I din't know *where* to write this
documentation (i.e. whether in :ref:`atelier` or rather in
:ref:`book`). 

The concept of *demo projects* is specific to Lino, but it is
implemented in :ref:`atelier`. And even though the Lino Team is
currently probably the only user of Atelier, Atelier is designed be
used also for non-Lino projects.

One solution might be to move these tasks and configuration settings
from :ref:`atelier` to :ref:`lino`.  I tried this.  Actually it was
only the :cmd:`inv prep` task and the :envvar:`demo_projects`
configuration setting.

The documentation is not yet fully adapted, but it seems the right
direction.  I also started to use the `envvar
<http://www.sphinx-doc.org/en/1.4.8/domains.html#directive-envvar>`_
directive for the invoke configuration settings.  For example
:envvar:`sdist_dir`, :envvar:`editor_command`.

**Note for newbies**: These changes also required a release of
:ref:`atelier`. So when upgrading your repositories and if you aren't
yet using the development version of :ref:`atelier`, then you must
run::

   $ pip install -U atelier

(Yes, I am a perfectionist, and I care less about
backwards-compatibility and deadlines than the Django Software
Foundation...)
  
